# This is a basic workflow to help you get started with Actions
name: Android Build

env:
  # The name of the main module repository
  main_project_module: app

  # The name of the Play Store
  play_store_name: shareque

# Controls when the workflow will run
on:
  # Triggers the workflow on push request events but only for the "master" branch
  push:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest
        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
          # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
          - name: Checkout
            uses: actions/checkout@v4.1.1

          - name: Setup Java JDK
            uses: actions/setup-java@v4.0.0
            with:
              java-version: '17'
              distribution: 'adopt'

          - name: Change wrapper permissions
            run: chmod +x ./gradlew

          # Runs a single command using the runners shell
          - name: Build with Gradle
            run: ./gradlew build

          # Set Current Date As Env Variable
          - name: Set current date as env variable
            run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

          # Set Repository Name As Env Variable
          - name: Set repository name as env variable
            run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

          # Run Tests Build
          - name: Run gradle tests
            run: ./gradlew test

          # Create APK Release
          - name: Build apk release project (APK) - ${{ env.main_project_module }} module
            run: ./gradlew assemble

          # Noted For Output [main_project_module]/build/outputs/apk/release/
          - name: Upload APK Release - ${{ env.repository_name }}
            uses: actions/upload-artifact@v4
            with:
              name: ${{ env.date_today }} - ${{ env.play_store_name }} - ${{ env.repository_name }} - APK(s) release generated
              path: ${{ env.main_project_module }}/build/outputs/apk/release/

